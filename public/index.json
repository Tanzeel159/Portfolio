[{"content":"ðŸ”— Digital Garden\nFeatures Obsidian compatibility Full text search Graph View wikilinks backlinks syntax highlighting popover previews Graph View ","permalink":"http://localhost:1313/blog/digital-garden/","summary":"ðŸ”— Digital Garden\nFeatures Obsidian compatibility Full text search Graph View wikilinks backlinks syntax highlighting popover previews Graph View ","title":"Digital Garden"},{"content":"ðŸ”— Portfolio Website - Performance Metrics\nIn the fast-paced digital world, where attention spans are shorter than a cat video, how quickly your website loads can make or break the user experience. There has been extensive research done which highlghts the relationship between website performance and business success, why speed is one of the defining factors in how successful online ventures can be.\nSome of the examples are highlighted below :\nThe BBC found they lost an additional 10% of users for every additional second their site took to load. DoubleClick by Google found 53% of mobile site visits were abandoned if a page took longer than 3 seconds to load. These are some of the important topics I feel should be taken into consideration while designing a website:\nSignificance of first impressions : The loading speed of your website serves as a digital handshake, shaping the initial impression users form. So it\u0026rsquo;s important to make a positive and lasting impact on the user.\nUser Centric Philosophy : Placing users at the centre of your website entails you are respecting their time . Web performance optimization embodies a commitment to enhancing the overall user journey through efficient, responsive design.\nMobile Responsiveness : With the prevalence of mobile devices, ensuring optimal web performance on these platforms is imperative. Failing to do so will massively impact user experience .\nSEO Advantages : There exists a symbiotic relationship between web performance and search engine optimization. Search engines reward fast-loading websites with enhanced visibility, making optimization a strategic component of digital marketing efforts.\nFollowing are the metrics considered to measure website performance :\nFirst byte : How long the user sees a white screen for before anything can even start happening First contentful paint : First bit of content loads Document complete time : Generally when all of the static content has loaded Performance metrics for Portfolio website : Important Links : ðŸ”— gtmetrix\nReferences : ðŸ”— Medium Article ðŸ”— Web.dev ","permalink":"http://localhost:1313/blog/performance-metrics/","summary":"ðŸ”— Portfolio Website - Performance Metrics\nIn the fast-paced digital world, where attention spans are shorter than a cat video, how quickly your website loads can make or break the user experience. There has been extensive research done which highlghts the relationship between website performance and business success, why speed is one of the defining factors in how successful online ventures can be.\nSome of the examples are highlighted below :","title":"Improving User Experience through Web Performance"},{"content":"","permalink":"http://localhost:1313/case-study/readwise_reader/","summary":"","title":"Readwise Reader"},{"content":"Description Manage and optimize middleware components, focusing on WebSphere Application Server and Apache Tomcat. Implement SSL/TLS configurations to secure communication channels, utilizing tools such as OpenSSL and key management systems. Oversaw middleware-related automation using tools like Ansible, ensuring efficient deployment and configuration processes. Collaborate with development teams to integrate and support middleware technologies, including message brokers like Apache Kafka and IBM MQ. ","permalink":"http://localhost:1313/experience/tcs-3/","summary":"Description Manage and optimize middleware components, focusing on WebSphere Application Server and Apache Tomcat. Implement SSL/TLS configurations to secure communication channels, utilizing tools such as OpenSSL and key management systems. Oversaw middleware-related automation using tools like Ansible, ensuring efficient deployment and configuration processes. Collaborate with development teams to integrate and support middleware technologies, including message brokers like Apache Kafka and IBM MQ. ","title":"System Engineer"},{"content":"Description Successfully completed development, testing and deployment of CR in Production environment. Performed WebSphere Application Server administration tasks such as installation, configuration, monitoring and performance tuning. Deploying JAR,WAR files on IBM WebSphere. SSL Configurations from Webserver to Appserver. Monitored logs and identified errors which was helpful in further analysis by other team members. ","permalink":"http://localhost:1313/experience/tcs-2/","summary":"Description Successfully completed development, testing and deployment of CR in Production environment. Performed WebSphere Application Server administration tasks such as installation, configuration, monitoring and performance tuning. Deploying JAR,WAR files on IBM WebSphere. SSL Configurations from Webserver to Appserver. Monitored logs and identified errors which was helpful in further analysis by other team members. ","title":"Assistant System Engineer"},{"content":"Description Executed comprehensive testing across various test scenarios. Generated test orders to encompass all specified parameters. Carefully documented and reported the discovered findings. These findings proved invaluable for subsequent analysis. Coordinated with concerned teams to modify code-base in order to implement user change requests. ","permalink":"http://localhost:1313/experience/tcs-1/","summary":"Description Executed comprehensive testing across various test scenarios. Generated test orders to encompass all specified parameters. Carefully documented and reported the discovered findings. These findings proved invaluable for subsequent analysis. Coordinated with concerned teams to modify code-base in order to implement user change requests. ","title":"Assistant System Engineer Trainee"},{"content":"ðŸ”— Vercel\nModern looking payment landing page which has an opening section, including gradients, informative stats section showcasing number of users and transactions, including an engaging user testimonials section.\nProduct Section Testimonials Section ","permalink":"http://localhost:1313/projects/payment-landingpage/","summary":"ðŸ”— Vercel\nModern looking payment landing page which has an opening section, including gradients, informative stats section showcasing number of users and transactions, including an engaging user testimonials section.\nProduct Section Testimonials Section ","title":"Payment Landing Page"},{"content":"ðŸ”— Figma\nDesigned a food delivery app in Figma which contains \u0026ldquo;Getting Started\u0026rdquo; and \u0026ldquo;Home\u0026rdquo; pages to create an engaging and user-friendly food ordering experience.\nCreated an aesthetically pleasing and functional home page where users could easily browse restaurants, search for favorite foods, filter food by categories.\n","permalink":"http://localhost:1313/projects/food-delivery/","summary":"ðŸ”— Figma\nDesigned a food delivery app in Figma which contains \u0026ldquo;Getting Started\u0026rdquo; and \u0026ldquo;Home\u0026rdquo; pages to create an engaging and user-friendly food ordering experience.\nCreated an aesthetically pleasing and functional home page where users could easily browse restaurants, search for favorite foods, filter food by categories.","title":"Food Delivery App"},{"content":"ðŸ”— Github\nDescription A dynamic web application built entirely with React. Inspired by the popular online code editor and developer playground, my clone combines the power of React with the versatility of CodeMirror.\nThis project provides a creative space for code enthusiasts to experiment with HTML, CSS, and JavaScript in a real-time environment. With the seamless integration of CodeMirror, users can write and preview code simultaneously, fostering a productive coding experience.\n","permalink":"http://localhost:1313/projects/codepen.io-clone/","summary":"ðŸ”— Github\nDescription A dynamic web application built entirely with React. Inspired by the popular online code editor and developer playground, my clone combines the power of React with the versatility of CodeMirror.\nThis project provides a creative space for code enthusiasts to experiment with HTML, CSS, and JavaScript in a real-time environment. With the seamless integration of CodeMirror, users can write and preview code simultaneously, fostering a productive coding experience.","title":"Codepen.io Clone"},{"content":"ðŸ”— GitHub\nDescription Attendance is primarily important for both the teacher and student of an educational organization. It is very important to keep record of the attendance. The problem arises when we think about the traditional process of taking attendance in class room which involves calling name/roll number. A face recognition based attendance system could automate the entire system and streamline the process increasing the rate and reducing the time.\nTeam Members Tanzeel Ahmed Shaikh (code developent and testing) Kyatham Priyanka (dataset collection) Ramakrishna (code development) Manikanta (documentation) Algorithm Azure Face API is used to detect, recognize and analyze human faces in images.\nGet Face Attributes Authorize the Face API Call Create the Person Group Define people for Person Group Detect faces and register them to correct person Train the Person Group Identify face against defined group Module Design Student Registration Flow\nFaculty Attendance Capture Flow\nFeature Extraction\nGenerating Attendance\nProcess 20 images are captured for every user to create dataset for training. All the details related to student are captured in database.\nThis information is converted to URL which is sent to Azure Cloud where Microsoft Face Detection API is used to train the dataset and extract face features.\nWhen the image is captured, faces are detected, matched against database and attendance is marked. Results ","permalink":"http://localhost:1313/projects/face-recognition/","summary":"ðŸ”— GitHub\nDescription Attendance is primarily important for both the teacher and student of an educational organization. It is very important to keep record of the attendance. The problem arises when we think about the traditional process of taking attendance in class room which involves calling name/roll number. A face recognition based attendance system could automate the entire system and streamline the process increasing the rate and reducing the time.","title":"Face Recognition Based Attendance System"},{"content":"ðŸ”— Github\nDescription When we\u0026rsquo;re shown an image, our brain instantly recognizes the objects contained in it. On the other hand, it takes a lot of time and training data for a machine to identify these objects.The processing of visual data happens in the ventral visual stream.Humans can easily recognize different sized objects and put them in the same category. Object detection refers to the capability of computer and software systems to locate objects in an image/scene and identify each object. In this project we try to implement Object Detection using Single Shot Multibox Detector.Object detection has been widely used for face detection, vehicle detection, pedestrian counting, web images, security systems and driverless cars. Major features of SSD include object localization and classification in single step, bounding boxes to detect objects and detector.\nAlgorithm Pass the image through a series of convolutional layers For each location in each of these feature maps, use a 3x3 convolutional filter to evaluate a small set of default bounding boxes. For each box, simultaneously predict the bounding box offset and the class probabilities During training, match the ground truth box with these predicted boxes based on IoU(Intersection over union). Instead of using all the negative examples, sort the results using the highest confidence loss for each default box and pick the top ones so that the ratio between the negatives and positives is at most 3:1. Implementation Training Labelling Results ","permalink":"http://localhost:1313/projects/real-time-object-detection/","summary":"ðŸ”— Github\nDescription When we\u0026rsquo;re shown an image, our brain instantly recognizes the objects contained in it. On the other hand, it takes a lot of time and training data for a machine to identify these objects.The processing of visual data happens in the ventral visual stream.Humans can easily recognize different sized objects and put them in the same category. Object detection refers to the capability of computer and software systems to locate objects in an image/scene and identify each object.","title":"Real Time Object Detection"},{"content":"\r","permalink":"http://localhost:1313/books/books/","summary":"\r","title":"Books"}]